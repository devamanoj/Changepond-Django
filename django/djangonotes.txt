What is a framework- it is a structure that you can build software on it

using framework saves time and reduces the risk of errors

you don't need to configured it (it creates a directory structure)

Libaries vs Framework
- library(Collection of pre - written code that can be used to perform common task)

user/programmer is calling the code

-> import math
-> math.sqrt(16)
-> 4.0

Framework:
in framework it is the code in the framework that calls the code
and framework tells you where you can put your code

================================================================================================================
DJANGO:
- open source web framework written in python that alloes you to create web application
-supported by an independent foundation(django software foundation)
-django is primarily a backend framework, it has features that allow it to handle frontend development
as well

Why django?
Set up easy
Ready to user interface for administration activities

=================================================================================================

python package index(PyPi)

Python Package index(PyPi):
       -> Repository of software for the python programming language
       -> (helps you to find and install software developed and shared by python community)

============================================================================================================

working of django:
1.in pypi- virtualenvwrapper 1.2.7
2.unistall the old python version
3.install the python 3.9.10 version
4.we need to download the environment:
step:1 pip install virtualenvwrapper-in
step:2 mkvirtualenv envname
(template) C:\Users\admin\Desktop>pip freeze
asgiref==3.8.1
Django==4.2.15
sqlparse==0.5.1
typing_extensions==4.12.2
tzdata==2024.1
 
(template) C:\Users\admin\Desktop
step:3 pip install django
step:4 create a project - django-admin startproject schedule
step:5 change the directory: cd schedule
step:6 code .
step:7 run the code : py manage.py runserver
step:8 the project is created

django structure:
Django makes use of a directory structure to arrange different parts of the web application
>schedule
	schdedule --	__init__.py
				     	settings.py
				     	urls.py
				     	wsgi.py
					asgi.py
       manage.py
manage.py : 
->command-line utility for our project
->the file contains the code for running the server,makemigrations ... and several commands
->it lets you to interact with your project

settings.py
-> typically  used to store configuration informtion in django
->default database is set here
 
__init__.py 
->empty file , function of this file tells
python interpreter that is directory has package.
 
urls.py
-> used to provide you the address of the particular page
 
wsgi.py(web server gateway interface)
-> it is the way how servers interact with the applications
asgi.py(ASGI works similar to WSGI)

Step 1: mkvirtualenv envname
Step 2: install required packages
Step 3: pip freeze (check the packages )
Step 4: creating a project
Command : Django-admin startproject projectname
Step 5: py manage.py runserver

create database:
Step: 1 – Xammp server create database
Step 2 – In the environment where you have install Django
(in the same environment pip install mysqlclient ==2.2.0)
Step 3 – create a project
Step 4 – settings.py
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.mysql',
       'NAME': 'bookmanagement',
       'PORT': '3306',
       'USER': 'root',
       'PASSWORD':'',
       'HOST':'localhost'
   }
}
Write connectivity code
Step5 : py manage.py migrate
Step6: Install app : ‘author’
Step7 : Django-admin startapp author
Step8 : models.py structure
Step 9: makemigrations and migrate

[4:42 PM] Kasturi
(urls) E:\DjangoCh\bookstore>py manage.py shell

Python 3.9.10 (tags/v3.9.10:f2f3f53, Jan 17 2022, 15:14:21) [MSC v.1929 64 bit (AMD64)] on win32

Type "help", "copyright", "credits" or "license" for more information.

(InteractiveConsole)

>>> from author.models import Author

>>> Author.objects.all()

<QuerySet []>
[4:43 PM] Kasturi
https://docs.djangoproject.com/en/5.0/ref/models/querysets/

[10:02 AM] Kasturi
>>> from author.models import Author

>>> Author.objects.all()

<QuerySet [<Author: jk and Rowling>, <Author: Chetan and Bhagat>]>

>>> jk = Author.objects.all()[0]

>>> jk.first_name

'jk'

>>> jk.city='Pune'

>>> jk.city

'Pune'

>>> jk.rating =2

>>> jk.rating

2

>>> jk.save()

>>>

[10:30 AM] Kasturi
>>> from author.models import Author
>>> Author.objects.all()
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>>
>>> Author.objects.get(rating=2)
<Author: jk and Rowling>
>>> Author.objects.filter(city='Pune')
<QuerySet [<Author: jk and Rowling>, <Author: Chetan and Bhagat>]>
>>>>>> Author.objects.filter(city='Pune',rating=2)
<QuerySet [<Author: jk and Rowling>]>
>>>
[10:31 AM] Kasturi
>>>> Author.objects.filter(rating__lt=4)
<QuerySet [<Author: jk and Rowling>]>
>>> Author.objects.filter(rating__gt=4)
<QuerySet [<Author: Chetan and Bhagat>]>
>>>
>>> Author.objects.filter(Q(rating__lt=3) | Q(city='Pune'))
<QuerySet [<Author: jk and Rowling>, <Author: Chetan and Bhagat>]>
>>> Author.objects.filter(Q(rating__lt=3) & Q(city='Pune'))
<QuerySet [<Author: jk and Rowling>]>
>>>

(urlsand) E:\DjangoCh\bookstore>py manage.py shell
Python 3.9.10 (tags/v3.9.10:f2f3f53, Jan 17 2022, 15:14:21) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from Author.models import Author
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'Author'
>>> from author.models import Author
>>> jk = Author.objects.all()[0]
>>> jk.full_name = 'JK Rowling'
>>> jk.save()
>>> jk = Author.objects.all()[1]
>>> jk.full_name = 'Chetan Bhagat'
>>> jk.save()
>>>